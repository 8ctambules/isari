version: '2.1'
services:
# ElasticSearch
  index:
    image: elasticsearch:2.3.5
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 3
# MongoDB
  db:
    image: mongo:3.2.9
    restart: unless-stopped
    command: mongod --smallfiles --replSet rs2es
    depends_on:
      - index
# Docker temporaire pour configuer le replica set
  mongosetup:
    image: mongo:3.2.9
    links:
      - db
    command: "mongo --host db:27017 --eval rs.initiate()"
    depends_on:
      - db
# Mongo-connector
  connector:
    image: jrisp/docker-mongo-es
    restart: unless-stopped
    links:
      - index
      - db
    environment:
      - MONGO_URL=mongodb://db:27017
      - ES_URL=index:9200
      - MONGO_INCLUDES=isari.people,isari.organizations,isari.activities
      - CONFIG_LOCATION=file:///opt/mongo-connector/optional-config.json
    volumes:
      - ./mongo-connector.json:/opt/mongo-connector/optional-config.json:ro
    depends_on:
        index:
           condition: service_healthy
# Isari Server
  server:
    build: .
    restart: unless-stopped
    env_file:
      - docker-config.env
    links:
      - index
      - db
    depends_on:
      - index
      - db
      - connector
# Isari Client
  client:
    build: client
    restart: unless-stopped
    env_file:
      - docker-config.env
    links:
      - server
    ports:
      - 80:80 
